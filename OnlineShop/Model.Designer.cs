//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("DBModel", "FK_Blacklist_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineShop.Users), "Blacklist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineShop.Blacklist), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_RequestProcesses_Requests", "Requests", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineShop.Requests), "RequestProcesses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OnlineShop.RequestProcesses), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Requests_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OnlineShop.Users), "Requests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OnlineShop.Requests), true)]

#endregion

namespace OnlineShop
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DBEntities, используя строку соединения из раздела "DBEntities" файла конфигурации приложения.
        /// </summary>
        public DBEntities() : base("name=DBEntities", "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DBEntities.
        /// </summary>
        public DBEntities(string connectionString) : base(connectionString, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DBEntities.
        /// </summary>
        public DBEntities(EntityConnection connection) : base(connection, "DBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Blacklist> Blacklist
        {
            get
            {
                if ((_Blacklist == null))
                {
                    _Blacklist = base.CreateObjectSet<Blacklist>("Blacklist");
                }
                return _Blacklist;
            }
        }
        private ObjectSet<Blacklist> _Blacklist;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RequestProcesses> RequestProcesses
        {
            get
            {
                if ((_RequestProcesses == null))
                {
                    _RequestProcesses = base.CreateObjectSet<RequestProcesses>("RequestProcesses");
                }
                return _RequestProcesses;
            }
        }
        private ObjectSet<RequestProcesses> _RequestProcesses;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Requests> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Requests>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Requests> _Requests;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Blacklist. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBlacklist(Blacklist blacklist)
        {
            base.AddObject("Blacklist", blacklist);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RequestProcesses. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRequestProcesses(RequestProcesses requestProcesses)
        {
            base.AddObject("RequestProcesses", requestProcesses);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Requests. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRequests(Requests requests)
        {
            base.AddObject("Requests", requests);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Blacklist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blacklist : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Blacklist.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="reason">Исходное значение свойства reason.</param>
        public static Blacklist CreateBlacklist(global::System.Int32 id, global::System.String reason)
        {
            Blacklist blacklist = new Blacklist();
            blacklist.id = id;
            blacklist.reason = reason;
            return blacklist;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String reason
        {
            get
            {
                return _reason;
            }
            set
            {
                OnreasonChanging(value);
                ReportPropertyChanging("reason");
                _reason = StructuralObject.SetValidValue(value, false, "reason");
                ReportPropertyChanged("reason");
                OnreasonChanged();
            }
        }
        private global::System.String _reason;
        partial void OnreasonChanging(global::System.String value);
        partial void OnreasonChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Blacklist_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Blacklist_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Blacklist_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Blacklist_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DBModel.FK_Blacklist_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="RequestProcesses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestProcesses : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RequestProcesses.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="workerName">Исходное значение свойства workerName.</param>
        /// <param name="visiDate">Исходное значение свойства visiDate.</param>
        /// <param name="visitStatus">Исходное значение свойства visitStatus.</param>
        /// <param name="problemInfo">Исходное значение свойства problemInfo.</param>
        public static RequestProcesses CreateRequestProcesses(global::System.Int32 id, global::System.String workerName, global::System.DateTime visiDate, global::System.Int32 visitStatus, global::System.String problemInfo)
        {
            RequestProcesses requestProcesses = new RequestProcesses();
            requestProcesses.id = id;
            requestProcesses.workerName = workerName;
            requestProcesses.visiDate = visiDate;
            requestProcesses.visitStatus = visitStatus;
            requestProcesses.problemInfo = problemInfo;
            return requestProcesses;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String workerName
        {
            get
            {
                return _workerName;
            }
            set
            {
                OnworkerNameChanging(value);
                ReportPropertyChanging("workerName");
                _workerName = StructuralObject.SetValidValue(value, false, "workerName");
                ReportPropertyChanged("workerName");
                OnworkerNameChanged();
            }
        }
        private global::System.String _workerName;
        partial void OnworkerNameChanging(global::System.String value);
        partial void OnworkerNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime visiDate
        {
            get
            {
                return _visiDate;
            }
            set
            {
                OnvisiDateChanging(value);
                ReportPropertyChanging("visiDate");
                _visiDate = StructuralObject.SetValidValue(value, "visiDate");
                ReportPropertyChanged("visiDate");
                OnvisiDateChanged();
            }
        }
        private global::System.DateTime _visiDate;
        partial void OnvisiDateChanging(global::System.DateTime value);
        partial void OnvisiDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 visitStatus
        {
            get
            {
                return _visitStatus;
            }
            set
            {
                OnvisitStatusChanging(value);
                ReportPropertyChanging("visitStatus");
                _visitStatus = StructuralObject.SetValidValue(value, "visitStatus");
                ReportPropertyChanged("visitStatus");
                OnvisitStatusChanged();
            }
        }
        private global::System.Int32 _visitStatus;
        partial void OnvisitStatusChanging(global::System.Int32 value);
        partial void OnvisitStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String problemInfo
        {
            get
            {
                return _problemInfo;
            }
            set
            {
                OnproblemInfoChanging(value);
                ReportPropertyChanging("problemInfo");
                _problemInfo = StructuralObject.SetValidValue(value, false, "problemInfo");
                ReportPropertyChanged("problemInfo");
                OnproblemInfoChanged();
            }
        }
        private global::System.String _problemInfo;
        partial void OnproblemInfoChanging(global::System.String value);
        partial void OnproblemInfoChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_RequestProcesses_Requests", "Requests")]
        public Requests Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requests>("DBModel.FK_RequestProcesses_Requests", "Requests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requests>("DBModel.FK_RequestProcesses_Requests", "Requests").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Requests> RequestsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Requests>("DBModel.FK_RequestProcesses_Requests", "Requests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Requests>("DBModel.FK_RequestProcesses_Requests", "Requests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Requests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Requests : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Requests.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="creationDate">Исходное значение свойства creationDate.</param>
        /// <param name="startDate">Исходное значение свойства startDate.</param>
        /// <param name="endDate">Исходное значение свойства endDate.</param>
        /// <param name="objective">Исходное значение свойства objective.</param>
        /// <param name="userId">Исходное значение свойства userId.</param>
        /// <param name="requestStatus">Исходное значение свойства requestStatus.</param>
        /// <param name="reason">Исходное значение свойства reason.</param>
        public static Requests CreateRequests(global::System.Int32 id, global::System.DateTime creationDate, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String objective, global::System.Int32 userId, global::System.Int32 requestStatus, global::System.String reason)
        {
            Requests requests = new Requests();
            requests.id = id;
            requests.creationDate = creationDate;
            requests.startDate = startDate;
            requests.endDate = endDate;
            requests.objective = objective;
            requests.userId = userId;
            requests.requestStatus = requestStatus;
            requests.reason = reason;
            return requests;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime creationDate
        {
            get
            {
                return _creationDate;
            }
            set
            {
                OncreationDateChanging(value);
                ReportPropertyChanging("creationDate");
                _creationDate = StructuralObject.SetValidValue(value, "creationDate");
                ReportPropertyChanged("creationDate");
                OncreationDateChanged();
            }
        }
        private global::System.DateTime _creationDate;
        partial void OncreationDateChanging(global::System.DateTime value);
        partial void OncreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value, "startDate");
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private global::System.DateTime _startDate;
        partial void OnstartDateChanging(global::System.DateTime value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value, "endDate");
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private global::System.DateTime _endDate;
        partial void OnendDateChanging(global::System.DateTime value);
        partial void OnendDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String objective
        {
            get
            {
                return _objective;
            }
            set
            {
                OnobjectiveChanging(value);
                ReportPropertyChanging("objective");
                _objective = StructuralObject.SetValidValue(value, false, "objective");
                ReportPropertyChanged("objective");
                OnobjectiveChanged();
            }
        }
        private global::System.String _objective;
        partial void OnobjectiveChanging(global::System.String value);
        partial void OnobjectiveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 requestStatus
        {
            get
            {
                return _requestStatus;
            }
            set
            {
                OnrequestStatusChanging(value);
                ReportPropertyChanging("requestStatus");
                _requestStatus = StructuralObject.SetValidValue(value, "requestStatus");
                ReportPropertyChanged("requestStatus");
                OnrequestStatusChanged();
            }
        }
        private global::System.Int32 _requestStatus;
        partial void OnrequestStatusChanging(global::System.Int32 value);
        partial void OnrequestStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String reason
        {
            get
            {
                return _reason;
            }
            set
            {
                OnreasonChanging(value);
                ReportPropertyChanging("reason");
                _reason = StructuralObject.SetValidValue(value, false, "reason");
                ReportPropertyChanged("reason");
                OnreasonChanged();
            }
        }
        private global::System.String _reason;
        partial void OnreasonChanging(global::System.String value);
        partial void OnreasonChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_RequestProcesses_Requests", "RequestProcesses")]
        public RequestProcesses RequestProcesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestProcesses>("DBModel.FK_RequestProcesses_Requests", "RequestProcesses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestProcesses>("DBModel.FK_RequestProcesses_Requests", "RequestProcesses").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestProcesses> RequestProcessesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestProcesses>("DBModel.FK_RequestProcesses_Requests", "RequestProcesses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestProcesses>("DBModel.FK_RequestProcesses_Requests", "RequestProcesses", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Requests_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Requests_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Requests_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("DBModel.FK_Requests_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("DBModel.FK_Requests_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="fullName">Исходное значение свойства fullName.</param>
        /// <param name="phone">Исходное значение свойства phone.</param>
        /// <param name="email">Исходное значение свойства email.</param>
        /// <param name="birthDate">Исходное значение свойства birthDate.</param>
        /// <param name="pasportSeries">Исходное значение свойства pasportSeries.</param>
        /// <param name="pasportNumber">Исходное значение свойства pasportNumber.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String fullName, global::System.String phone, global::System.String email, global::System.DateTime birthDate, global::System.Int32 pasportSeries, global::System.Int32 pasportNumber)
        {
            Users users = new Users();
            users.id = id;
            users.fullName = fullName;
            users.phone = phone;
            users.email = email;
            users.birthDate = birthDate;
            users.pasportSeries = pasportSeries;
            users.pasportNumber = pasportNumber;
            return users;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullName
        {
            get
            {
                return _fullName;
            }
            set
            {
                OnfullNameChanging(value);
                ReportPropertyChanging("fullName");
                _fullName = StructuralObject.SetValidValue(value, false, "fullName");
                ReportPropertyChanged("fullName");
                OnfullNameChanged();
            }
        }
        private global::System.String _fullName;
        partial void OnfullNameChanging(global::System.String value);
        partial void OnfullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, false, "phone");
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, true, "info");
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime birthDate
        {
            get
            {
                return _birthDate;
            }
            set
            {
                OnbirthDateChanging(value);
                ReportPropertyChanging("birthDate");
                _birthDate = StructuralObject.SetValidValue(value, "birthDate");
                ReportPropertyChanged("birthDate");
                OnbirthDateChanged();
            }
        }
        private global::System.DateTime _birthDate;
        partial void OnbirthDateChanging(global::System.DateTime value);
        partial void OnbirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pasportSeries
        {
            get
            {
                return _pasportSeries;
            }
            set
            {
                OnpasportSeriesChanging(value);
                ReportPropertyChanging("pasportSeries");
                _pasportSeries = StructuralObject.SetValidValue(value, "pasportSeries");
                ReportPropertyChanged("pasportSeries");
                OnpasportSeriesChanged();
            }
        }
        private global::System.Int32 _pasportSeries;
        partial void OnpasportSeriesChanging(global::System.Int32 value);
        partial void OnpasportSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pasportNumber
        {
            get
            {
                return _pasportNumber;
            }
            set
            {
                OnpasportNumberChanging(value);
                ReportPropertyChanging("pasportNumber");
                _pasportNumber = StructuralObject.SetValidValue(value, "pasportNumber");
                ReportPropertyChanged("pasportNumber");
                OnpasportNumberChanged();
            }
        }
        private global::System.Int32 _pasportNumber;
        partial void OnpasportNumberChanging(global::System.Int32 value);
        partial void OnpasportNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String organization
        {
            get
            {
                return _organization;
            }
            set
            {
                OnorganizationChanging(value);
                ReportPropertyChanging("organization");
                _organization = StructuralObject.SetValidValue(value, true, "organization");
                ReportPropertyChanged("organization");
                OnorganizationChanged();
            }
        }
        private global::System.String _organization;
        partial void OnorganizationChanging(global::System.String value);
        partial void OnorganizationChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Blacklist_Users", "Blacklist")]
        public Blacklist Blacklist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blacklist>("DBModel.FK_Blacklist_Users", "Blacklist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blacklist>("DBModel.FK_Blacklist_Users", "Blacklist").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blacklist> BlacklistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blacklist>("DBModel.FK_Blacklist_Users", "Blacklist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blacklist>("DBModel.FK_Blacklist_Users", "Blacklist", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Requests_Users", "Requests")]
        public EntityCollection<Requests> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Requests>("DBModel.FK_Requests_Users", "Requests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Requests>("DBModel.FK_Requests_Users", "Requests", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
